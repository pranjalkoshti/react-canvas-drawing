[{"/home/pranjal/work/packages/react-canvas-drawing/src/index.js":"1","/home/pranjal/work/packages/react-canvas-drawing/src/App.js":"2","/home/pranjal/work/packages/react-canvas-drawing/src/reportWebVitals.js":"3","/home/pranjal/work/packages/react-canvas-drawing/src/components/index.js":"4","/home/pranjal/work/packages/react-canvas-drawing/src/components/drawing.js":"5"},{"size":478,"mtime":1609515481910,"results":"6","hashOfConfig":"7"},{"size":2684,"mtime":1630684514594,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1609496380825,"results":"9","hashOfConfig":"7"},{"size":1542,"mtime":1630684299472,"results":"10","hashOfConfig":"7"},{"size":17567,"mtime":1631011999597,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"emlid4",{"filePath":"15","messages":"16","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/pranjal/work/packages/react-canvas-drawing/src/index.js",[],["25","26"],"/home/pranjal/work/packages/react-canvas-drawing/src/App.js",["27","28","29"],"import React,  { useEffect, useRef, useState } from \"react\";\nimport { ReactCanvas, Canvas } from './components';\n\nfunction App(props){\n    const canvas = useRef(null);\n    const [settings, setsettings] = useState({fillBox : true,\n        shape: null, //circle, square, line, ellipse, rect, polygon\n        xor : true,\n        polygonSides: null,\n        polygonAngle: null,\n        lineCap: true,\n        textInput: '',\n        fillColor: '#0367ff',\n        lineWidth: 5\n    });\n    const [clearFlag, setclearFlag] = useState(false)\n    const [canvasInstance, setcanvasInstance] = useState(false)\n\n\n    useEffect(() => {\n        let canvasObj = new Canvas({\n            canvas: canvas.current,\n            onDrawActionEnd: onDrawActionEnd,\n            onClear: onClear\n        })\n        setcanvasInstance(canvasObj)\n    }, [])\n\n\n    const clearCanvas = ()=>{\n        canvasInstance.clearCanvas()\n    }\n\n    const onDrawActionEnd = () =>{\n        setsettings(obj=>{\n            return {...obj, shape: null}\n        })\n    }\n\n    const onClear = () =>{\n        setclearFlag(false)\n    }\n\n    useEffect(() => {\n        if(canvasInstance){\n            canvasInstance.settingsListener(settings)\n        }\n    }, [settings])\n\n    return (\n        <>\n        <select onChange={(e)=>{\n            setsettings(obj=>{\n                return {...obj, shape: e.target.value}\n            })\n          \n        }}>\n            <option>line</option>\n            {/* <option>square</option> */}\n            <option>circle</option>\n            <option>rect</option>\n\n        </select>\n\n        <input id='fillColor' type='color' step='1' \n            value={settings.fillColor} \n            onChange={(e)=>{\n                setsettings(obj=>{\n                    return {...obj, fillColor: e.target.value}\n                })\n            }}></input>\n\n        <input type=\"range\" min=\"1\" max=\"100\" value={settings.lineWidth} \n            class=\"slider\" \n            id=\"myRange\"\n          onChange={(e)=>{\n            setsettings(obj=>{\n                return {...obj, lineWidth: e.target.value}\n            })\n        }}/>\n\n        <button onClick={()=>{\n            setclearFlag(true)\n            clearCanvas()\n        }}>Clear</button>\n\n        {/* <ReactCanvas \n            width={800} \n            height={1200} \n            canvasStyle={{border:'1px solid grey'}} \n            settings={{...settings}}\n            onDrawActionEnd={onDrawActionEnd}\n            clearFlag={clearFlag}\n            onClear={onClear1}\n        /> */}\n    <div>\n        <canvas ref={canvas} id=\"react-canvas\" width={500} height={800} style={{border:'1px solid grey'}}/>\n    </div>\n        </>\n    )\n}\nexport default App;","/home/pranjal/work/packages/react-canvas-drawing/src/reportWebVitals.js",[],"/home/pranjal/work/packages/react-canvas-drawing/src/components/index.js",["30","31","32","33","34"],"import React,  { useState, useRef, useEffect } from \"react\";\nimport Drawing from './drawing';\n\n\n\nexport const ReactCanvas = (props)=>{\n  const canvas = useRef(null);\n\n  const [DrawingController, setDrawingController] = useState(new Drawing())\n\n  useEffect(() => {\n    DrawingController.updateSettings(props.settings)\n  }, [props.settings])\n\n  useEffect(() => {\n    if(props.clearFlag == true){\n      DrawingController.eraseCanvas()\n    }\n  }, [props.clearFlag])\n\n  useEffect(() => {\n    DrawingController.addEventListeners(canvas.current)\n  }, [])\n\n\n\n  if(DrawingController && props.onDrawActionEnd){\n    DrawingController.onDrawActionEnd = props.onDrawActionEnd\n  }\n  if(DrawingController && props.onClear){\n    DrawingController.onClear = props.onClear;\n  }\n\n\n  return(\n \n      <canvas ref={canvas} id=\"react-canvas\" width={props.width} height={props.height} style={{...props.canvasStyle}}/>\n   \n  )\n}\n\nexport class Canvas {\n  constructor(data){\n    this.DrawingController = new Drawing()\n    if(this.DrawingController && data.onDrawActionEnd){\n      this.DrawingController.onDrawActionEnd = data.onDrawActionEnd\n    }\n    if(this.DrawingController && data.onClear){\n      this.DrawingController.onClear = data.onClear;\n    }\n    this.DrawingController.addEventListeners(data.canvas)\n  }\n\n  updateCanvas = (canvas)=>{\n    this.DrawingController.addEventListeners(canvas)\n  }\n\n  clearCanvas = () =>{\n    this.DrawingController.eraseCanvas()\n  }\n\n  settingsListener=(settings) =>{\n    this.DrawingController.updateSettings(settings)\n  }\n\n}\n\n\n","/home/pranjal/work/packages/react-canvas-drawing/src/components/drawing.js",["35","36","37","38","39","40","41","42","43","44","45","46","47","48"],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":2,"column":10,"nodeType":"55","messageId":"56","endLine":2,"endColumn":21},{"ruleId":"53","severity":1,"message":"57","line":16,"column":12,"nodeType":"55","messageId":"56","endLine":16,"endColumn":21},{"ruleId":"58","severity":1,"message":"59","line":48,"column":8,"nodeType":"60","endLine":48,"endColumn":18,"suggestions":"61"},{"ruleId":"53","severity":1,"message":"62","line":9,"column":29,"nodeType":"55","messageId":"56","endLine":9,"endColumn":49},{"ruleId":"58","severity":1,"message":"63","line":13,"column":6,"nodeType":"60","endLine":13,"endColumn":22,"suggestions":"64"},{"ruleId":"65","severity":1,"message":"66","line":16,"column":24,"nodeType":"67","messageId":"68","endLine":16,"endColumn":26},{"ruleId":"58","severity":1,"message":"63","line":19,"column":6,"nodeType":"60","endLine":19,"endColumn":23,"suggestions":"69"},{"ruleId":"58","severity":1,"message":"63","line":23,"column":6,"nodeType":"60","endLine":23,"endColumn":8,"suggestions":"70"},{"ruleId":"53","severity":1,"message":"71","line":32,"column":17,"nodeType":"55","messageId":"56","endLine":32,"endColumn":23},{"ruleId":"53","severity":1,"message":"72","line":289,"column":13,"nodeType":"55","messageId":"56","endLine":289,"endColumn":20},{"ruleId":"53","severity":1,"message":"73","line":312,"column":25,"nodeType":"55","messageId":"56","endLine":312,"endColumn":31},{"ruleId":"53","severity":1,"message":"74","line":398,"column":17,"nodeType":"55","messageId":"56","endLine":398,"endColumn":24},{"ruleId":"53","severity":1,"message":"75","line":398,"column":33,"nodeType":"55","messageId":"56","endLine":398,"endColumn":36},{"ruleId":"53","severity":1,"message":"76","line":398,"column":58,"nodeType":"55","messageId":"56","endLine":398,"endColumn":70},{"ruleId":"53","severity":1,"message":"77","line":398,"column":72,"nodeType":"55","messageId":"56","endLine":398,"endColumn":84},{"ruleId":"65","severity":1,"message":"66","line":413,"column":18,"nodeType":"67","messageId":"68","endLine":413,"endColumn":20},{"ruleId":"65","severity":1,"message":"66","line":416,"column":18,"nodeType":"67","messageId":"68","endLine":416,"endColumn":20},{"ruleId":"65","severity":1,"message":"66","line":419,"column":18,"nodeType":"67","messageId":"68","endLine":419,"endColumn":20},{"ruleId":"65","severity":1,"message":"66","line":422,"column":18,"nodeType":"67","messageId":"68","endLine":422,"endColumn":20},{"ruleId":"53","severity":1,"message":"78","line":436,"column":44,"nodeType":"55","messageId":"56","endLine":436,"endColumn":52},{"ruleId":"53","severity":1,"message":"78","line":446,"column":44,"nodeType":"55","messageId":"56","endLine":446,"endColumn":52},{"ruleId":"53","severity":1,"message":"73","line":458,"column":25,"nodeType":"55","messageId":"56","endLine":458,"endColumn":31},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'ReactCanvas' is defined but never used.","Identifier","unusedVar","'clearFlag' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'canvasInstance'. Either include it or remove the dependency array.","ArrayExpression",["81"],"'setDrawingController' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'DrawingController'. Either include it or remove the dependency array.",["82"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["83"],["84"],"'canvas' is assigned a value but never used.","'context' is assigned a value but never used.","'shapes' is assigned a value but never used.","'fillBox' is assigned a value but never used.","'xor' is assigned a value but never used.","'polygonSides' is assigned a value but never used.","'polygonAngle' is assigned a value but never used.","'settings' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},{"desc":"87","fix":"88"},{"desc":"89","fix":"90"},{"desc":"91","fix":"92"},"Update the dependencies array to be: [canvasInstance, settings]",{"range":"93","text":"94"},"Update the dependencies array to be: [DrawingController, props.settings]",{"range":"95","text":"96"},"Update the dependencies array to be: [DrawingController, props.clearFlag]",{"range":"97","text":"98"},"Update the dependencies array to be: [DrawingController]",{"range":"99","text":"100"},[1208,1218],"[canvasInstance, settings]",[322,338],"[DrawingController, props.settings]",[443,460],"[DrawingController, props.clearFlag]",[544,546],"[DrawingController]"]